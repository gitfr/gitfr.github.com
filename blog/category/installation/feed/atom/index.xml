<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">#gitfr</title>
  <subtitle type="text">Projet pour la promotion du bien et la destruction du mal</subtitle>

  <updated>2012-01-26T20:35:31Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://www.gitfr.net/blog" />
  <id>http://www.gitfr.net/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://www.gitfr.net/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://www.gitfr.net/blog</uri>
    </author>
    <title type="html"><![CDATA[Installer git sur Windows]]></title>
    <link rel="alternate" type="text/html" href="http://www.gitfr.net/blog/2010/11/01/installer-git-sur-windows" />
    <id>http://www.gitfr.net/blog/2010/11/01/installer-git-sur-windows</id>
    <updated>2010-11-01T19:45:00Z</updated>
    <published>2010-11-01T19:45:00Z</published>
    <category scheme="http://www.gitfr.net/blog" term="windows" />
    <category scheme="http://www.gitfr.net/blog" term="git" />
    <category scheme="http://www.gitfr.net/blog" term="installation" />
    <summary type="html"><![CDATA[Installer git sur Windows]]></summary>
    <content type="html" xml:base="http://www.gitfr.net/blog/2010/11/01/installer-git-sur-windows"><![CDATA[<p>Les possibilités sont plus limitées sous Windows car il n'existe pas de projet pour l'installer à partir des sources originales. Et pour cause, Git n'est pas prévu pour fonctionner sur Windows (c'est un projet purement <strong>Unix</strong>). Heureusement, le projet <a href="http://code.google.com/p/msysgit/">msysgit</a> est la ! Ce dernier est comparable au projet <em>Git OSX Installer</em> sous Mac OS X, et comme ce dernier il est trés actif, puisque nous trouvons la version 1.7.3.1 (la 1.7.3.2 est la dernière version officielle). A une différence d'importance, msysgit installe une version <em>maison</em> (on dit un <strong>fork</strong>) qui se trouve <a href="http://repo.or.cz/w/git/mingw/4msysgit.git/">ici</a> pour rendre git opérationnel sous Windows.</p>
<h2>Installation de msysgit</h2>
<p>C'est assez simple :</p>
<ul>
<li>Téléchargez la derniere version de l'installeur. Voici un <a href="http://msysgit.googlecode.com/files/Git-1.7.3.1-preview20101002.exe">lien vers la 1.7.3.1</a></li>
<li>Lancez l'installeur</li>
<li>Spécifiez un répertoire d'installation si besoin</li>
<li>Activez toutes les options</li>
<li>Choisissez l'option <em>Use Git Bash only</em></li>
<li>Choisissez l'option <em>Use Unix style line endings</em></li>
</ul>
<h2>Utiliser msysgit</h2>
<p>Vous pouvez maintenant utiliser git dans un <strong>shell</strong>. Celui-ci est accessible par l'icone du bureau ou dans le menu Windows.</p>
<h2>Git Extensions</h2>
<p><a href="http://code.google.com/p/gitextensions/">Git Extensions</a> utilise le projet msysgit et ajoute une <strong>interface graphique</strong> pour pas mal d'opérations, une extension Visual Studio et l'outil Kdiff3. Cerise sur le gateau, il embarque msysgit. Ce projet vous permet donc de tout installer en une seule fois. Cliquez sur ce <a href="http://gitextensions.googlecode.com/files/GitExtensions205SetupComplete.msi">lien</a> pour télécharger la dernière version. Vous pouvez voir sur cette <a href="http://code.google.com/p/gitextensions/wiki/Info">page</a> plusieurs copies d'écran pour vous faire une idée.</p>
<h2>Un constat</h2>
<p>La plateforme Windows est la moins adaptée à Git, d'abord parce que cette plateforme ne possède pas nativement les outils de type Unix (bash, diff...), et que c'est avant tout un outil <strong>ligne de commande</strong>, et que la ligne de commande... n'est pas le fort de Windows (mais cela reste largement possible). Il faut donc attendre que des développeurs codent des interfaces graphiques pour effectuer toutes les opérations usuelles (les fameuses commandes <em>porcelain</em>) plus "nativement" sous Windows. Ce problème devrait disparaitre avec l'arrivée à maturité des IDEs (IntelliJ, Eclipse...) et des outils de manipulations (TortoiseGit...). Git Extensions en est un bon exemple.</p>
<p>Reste que le projet msysgit est un projet bénévole complètement détaché du projet Git. Et que l'utilisation en ligne de commande est quand même bien plus pratique ;).</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.gitfr.net/blog</uri>
    </author>
    <title type="html"><![CDATA[Installer git sur OS X]]></title>
    <link rel="alternate" type="text/html" href="http://www.gitfr.net/blog/2010/11/01/installer-git-sur-os-x" />
    <id>http://www.gitfr.net/blog/2010/11/01/installer-git-sur-os-x</id>
    <updated>2010-11-01T00:40:00Z</updated>
    <published>2010-11-01T00:40:00Z</published>
    <category scheme="http://www.gitfr.net/blog" term="macos" />
    <category scheme="http://www.gitfr.net/blog" term="git" />
    <category scheme="http://www.gitfr.net/blog" term="installation" />
    <summary type="html"><![CDATA[Installer git sur OS X]]></summary>
    <content type="html" xml:base="http://www.gitfr.net/blog/2010/11/01/installer-git-sur-os-x"><![CDATA[<p>Mac OS X est un Unix et à ce titre, l'installation de git ressemble à ce qui existe sous les autres Unix comme Linux. Pour résumer, vous avez 2 méthodes :</p>
<ul>
<li>installer une version déja compilée par un tiers</li>
<li>installer une version à partir des sources</li>
</ul>
<p>Cette dernière méthode est plus contraignante, votre système doit contenir le nécessaire pour compiler du code C (compilateur <em>GCC</em>, outil <em>Make</em> et <em>Autoconf</em>...). Les habitués d'Unix libres (Linux, BSD) ne seront pas étonnés par ces 2 méthodes d'installation. Mais si vous êtes nouveau sous Unix, ne craignez rien, cela reste abordable pour un néophyte (et rapide si vous avez vos DVD fournis avec la machine).</p>
<h2>Installer une version compilée</h2>
<p>Pour ceux qui souhaitent ne pas "se prendre la tête", Il existe le projet <a href="http://code.google.com/p/git-osx-installer/">Git OSX Installer</a>, qui permet d'installer simplement git sur <em>Leopard</em> (10.5) et <em>Snow Leopard</em> (10.6). Vous pouvez constater que le projet est actif : au 30/11/2010, la version 1.7.3.1 est disponible alors que la dernière version est la 1.7.3.2.</p>
<p>Il suffit de télécharger le fichier (au format .dmg) et de le lancer. Vous trouverez à l'intérieur l'application git au format .pkg qu'il suffit d'installer. On peut ajouter une icône sur le <em>Finder</em> avec le sous projet <em>OpenInGitGui</em>.</p>
<h2>Installer une version source</h2>
<p>Pour ceux qui souhaitent maitriser leur installation, il est nécessaire de partir des sources. Dans ce cas, vous avez deux outils intéressants :</p>
<ul>
<li><a href="http://www.macports.org">MacPorts</a></li>
<li><a href="http://github.com/mxcl/homebrew">Homebrew</a></li>
</ul>
<p>Les utilisateurs Linux peuvent le comparer à <em>aptitude</em> ou <em>yum</em> (et sous BSD, vous avez par exemple les  commandes <em>pkg_</em>).</p>
<p>Homebrew est plus récent et semble plus complet, bien que les ports (les applications disponibles) soient moins nombreux. Dans les 2 cas, l'installation de Xcode est obligatoire.</p>
<h2>Installation de Xcode</h2>
<p>Xcode (qui est un ensemble d'applications et librairies pour développer sous Mac OS X) est nécessaire pour MacPorts et Homebrew. Ils sont disponibles sur le DVD1. Si vous avez perdu vos DVD, il est possible de télécharger Xcode sur le site d'<a href="http://developer.apple.com/technology/xcode.html">Apple</a>, aprés une inscription obligatoire. L'ensemble fait 2,9Go.</p>
<p>Une fois téléchargée, lancez l'installateur Xcode, cliquez sur <em>Customize</em> et choisissez <em>X11 User</em> et <em>Unix Development</em>.</p>
<h2>Avec MacPorts</h2>
<p>Il faut bien évidemment installer MacPorts :</p>
<ul>
<li>Télécharger la dernière version au format .dmg <a href="http://distfiles.macports.org/MacPorts/">ici</a> en prenant la version pour votre version de Mac OS X.</li>
<li>Lancer l'installateur en double-cliquant sur le fichier téléchargé.</li>
<li>Choisir l'installation par défaut.</li>
</ul>
<p>Il ne vous reste plus qu'a installer git avec la commande :</p>
<blockquote>
<p>$ sudo port install git-core +bash_completion +doc</p>
</blockquote>
<p>Ou si vous souhaitez jouer avec des dépôts SVN :</p>
<blockquote>
<p>$ sudo port install git-core +bash_completion +doc +svn</p>
</blockquote>
<p><em>sudo</em> vous permet de lancer une commande en mode administrateur (et non simple utilisateur). <em>port</em> est la commande MacPorts. <em>install</em> est l'argument pour demander l'installation. <em>git-core</em> est l'application à installer.</p>
<p>Vous pouvez mettre à jour vos <em>Ports</em> avec la commande :</p>
<blockquote>
<p>$ sudo port selfupdate</p>
</blockquote>
<h2>Avec Homebrew</h2>
<p>Homebrew est un projet plus réçent mais avec un objectif semblable à MacPorts, vous simplifier la vie en automatisant l'installation des applications non natives Mac OS X. Il suffit de taper cette commande dans un shell pour l'installer :</p>
<blockquote>
<p>$ ruby -e "$(curl -fsS http://gist.github.com/raw/323731/install_homebrew.rb)"</p>
</blockquote>
<p>Cette commande esotérique télécharge le fichier <em>install_homebrew.rb</em> avec la commande <em>curl</em> puis demande à l'interpréteur <em>Ruby</em> de l'éxécuter (note au passage : oui, le shell est amour, maitrisez-le et vous gagnerez des années de vie). Bien évidemment Ruby et Curl doivent être présents sur votre système.</p>
<p>Vous avez maintenant accès à la commande <em>brew</em> :</p>
<blockquote>
<p>$ brew install git</p>
</blockquote>
<p>Cette commande ressemble à la commande MacPorts. Et vous avez aussi une commande pour mettre à jour vos applications avec la commande :</p>
<blockquote>
<p>$ brew update</p>
</blockquote>
<h2>Installation "à la main"</h2>
<p>Il est bien sur possible d'installer git à la main (c'est à dire sans outil supplémentaire), en partant des sources. Mais je laisse cet exercice au lecteur :). Néanmoins, voici des aides :</p>
<ul>
<li><a href="http://gist.github.com/423308">http://gist.github.com/423308</a></li>
<li><a href="http://hivelogic.com/articles/compiling-git-on-snow-leopard">Compiling Git on Snow Leopard</a></li>
</ul>
<h2>MacPorts ou Homebrew ?</h2>
<p>Sans être un spécialiste (je n'ai pas touché à un Mac depuis des années), Homebrew me semble plus intéressant car il tente de simplifier la création d'un nouveau paquet et tente d'éliminer les duplications d'applications observées avec MacPorts. Néanmoins, il semble moins mature que ce dernier. Si vous avez un ami expérimenté sous Mac, demandez lui ce qu'il préfère !</p>
<h2>Et voila !</h2>
<p>Vous avez maintenant un git fonctionnel sur votre machine :).</p>
<p>Merci à David Gageot et Ronan Amicel pour la relecture.Mac OS X est un Unix et à ce titre, l'installation de git ressemble à ce qui existe sous les autres Unix comme Linux. Pour résumer, vous avez 2 méthodes :</p>
<ul>
<li>installer une version déja compilée par un tiers</li>
<li>installer une version à partir des sources</li>
</ul>
<p>Cette dernière méthode est plus contraignante, votre système doit contenir le nécessaire pour compiler du code C (compilateur <em>GCC</em>, outil <em>Make</em> et <em>Autoconf</em>...). Les habitués d'Unix libres (Linux, BSD) ne seront pas étonnés par ces 2 méthodes d'installation. Mais si vous êtes nouveau sous Unix, ne craignez rien, cela reste abordable pour un néophyte (et rapide si vous avez vos DVD fournis avec la machine).</p>
<h2>Installer une version compilée</h2>
<p>Pour ceux qui souhaitent ne pas "se prendre la tête", Il existe le projet <a href="http://code.google.com/p/git-osx-installer/">Git OSX Installer</a>, qui permet d'installer simplement git sur <em>Leopard</em> (10.5) et <em>Snow Leopard</em> (10.6). Vous pouvez constater que le projet est actif : au 30/11/2010, la version 1.7.3.1 est disponible alors que la dernière version est la 1.7.3.2.</p>
<p>Il suffit de télécharger le fichier (au format .dmg) et de le lancer. Vous trouverez à l'intérieur l'application git au format .pkg qu'il suffit d'installer. On peut ajouter une icône sur le <em>Finder</em> avec le sous projet <em>OpenInGitGui</em>.</p>
<h2>Installer une version source</h2>
<p>Pour ceux qui souhaitent maitriser leur installation, il est nécessaire de partir des sources. Dans ce cas, vous avez deux outils intéressants :</p>
<ul>
<li><a href="http://www.macports.org">MacPorts</a></li>
<li><a href="http://github.com/mxcl/homebrew">Homebrew</a></li>
</ul>
<p>Les utilisateurs Linux peuvent le comparer à <em>aptitude</em> ou <em>yum</em> (et sous BSD, vous avez par exemple les  commandes <em>pkg_</em>).</p>
<p>Homebrew est plus récent et semble plus complet, bien que les ports (les applications disponibles) soient moins nombreux. Dans les 2 cas, l'installation de Xcode est obligatoire.</p>
<h2>Installation de Xcode</h2>
<p>Xcode (qui est un ensemble d'applications et librairies pour développer sous Mac OS X) est nécessaire pour MacPorts et Homebrew. Ils sont disponibles sur le DVD1. Si vous avez perdu vos DVD, il est possible de télécharger Xcode sur le site d'<a href="http://developer.apple.com/technology/xcode.html">Apple</a>, aprés une inscription obligatoire. L'ensemble fait 2,9Go.</p>
<p>Une fois téléchargée, lancez l'installateur Xcode, cliquez sur <em>Customize</em> et choisissez <em>X11 User</em> et <em>Unix Development</em>.</p>
<h2>Avec MacPorts</h2>
<p>Il faut bien évidemment installer MacPorts :</p>
<ul>
<li>Télécharger la dernière version au format .dmg <a href="http://distfiles.macports.org/MacPorts/">ici</a> en prenant la version pour votre version de Mac OS X.</li>
<li>Lancer l'installateur en double-cliquant sur le fichier téléchargé.</li>
<li>Choisir l'installation par défaut.</li>
</ul>
<p>Il ne vous reste plus qu'a installer git avec la commande :</p>
<blockquote>
<p>$ sudo port install git-core +bash_completion +doc</p>
</blockquote>
<p>Ou si vous souhaitez jouer avec des dépôts SVN :</p>
<blockquote>
<p>$ sudo port install git-core +bash_completion +doc +svn</p>
</blockquote>
<p><em>sudo</em> vous permet de lancer une commande en mode administrateur (et non simple utilisateur). <em>port</em> est la commande MacPorts. <em>install</em> est l'argument pour demander l'installation. <em>git-core</em> est l'application à installer.</p>
<p>Vous pouvez mettre à jour vos <em>Ports</em> avec la commande :</p>
<blockquote>
<p>$ sudo port selfupdate</p>
</blockquote>
<h2>Avec Homebrew</h2>
<p>Homebrew est un projet plus réçent mais avec un objectif semblable à MacPorts, vous simplifier la vie en automatisant l'installation des applications non natives Mac OS X. Il suffit de taper cette commande dans un shell pour l'installer :</p>
<blockquote>
<p>$ ruby -e "$(curl -fsS http://gist.github.com/raw/323731/install_homebrew.rb)"</p>
</blockquote>
<p>Cette commande esotérique télécharge le fichier <em>install_homebrew.rb</em> avec la commande <em>curl</em> puis demande à l'interpréteur <em>Ruby</em> de l'éxécuter (note au passage : oui, le shell est amour, maitrisez-le et vous gagnerez des années de vie). Bien évidemment Ruby et Curl doivent être présents sur votre système.</p>
<p>Vous avez maintenant accès à la commande <em>brew</em> :</p>
<blockquote>
<p>$ brew install git</p>
</blockquote>
<p>Cette commande ressemble à la commande MacPorts. Et vous avez aussi une commande pour mettre à jour vos applications avec la commande :</p>
<blockquote>
<p>$ brew update</p>
</blockquote>
<h2>Installation "à la main"</h2>
<p>Il est bien sur possible d'installer git à la main (c'est à dire sans outil supplémentaire), en partant des sources. Mais je laisse cet exercice au lecteur :). Néanmoins, voici des aides :</p>
<ul>
<li><a href="http://gist.github.com/423308">http://gist.github.com/423308</a></li>
<li><a href="http://hivelogic.com/articles/compiling-git-on-snow-leopard">Compiling Git on Snow Leopard</a></li>
</ul>
<h2>MacPorts ou Homebrew ?</h2>
<p>Sans être un spécialiste (je n'ai pas touché à un Mac depuis des années), Homebrew me semble plus intéressant car il tente de simplifier la création d'un nouveau paquet et tente d'éliminer les duplications d'applications observées avec MacPorts. Néanmoins, il semble moins mature que ce dernier. Si vous avez un ami expérimenté sous Mac, demandez lui ce qu'il préfère !</p>
<h2>Et voila !</h2>
<p>Vous avez maintenant un git fonctionnel sur votre machine :).</p>
<p>Merci à David Gageot et Ronan Amicel pour la relecture.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.gitfr.net/blog</uri>
    </author>
    <title type="html"><![CDATA[Installer git sur Ubuntu]]></title>
    <link rel="alternate" type="text/html" href="http://www.gitfr.net/blog/2010/10/30/installer-git-sur-ubuntu" />
    <id>http://www.gitfr.net/blog/2010/10/30/installer-git-sur-ubuntu</id>
    <updated>2010-10-30T19:56:00Z</updated>
    <published>2010-10-30T19:56:00Z</published>
    <category scheme="http://www.gitfr.net/blog" term="git" />
    <category scheme="http://www.gitfr.net/blog" term="installation" />
    <category scheme="http://www.gitfr.net/blog" term="ubuntu" />
    <summary type="html"><![CDATA[Installer git sur Ubuntu]]></summary>
    <content type="html" xml:base="http://www.gitfr.net/blog/2010/10/30/installer-git-sur-ubuntu"><![CDATA[<p>Rien de plus facile pour disposer de git sous Ubuntu :</p>
<blockquote>
<p>$ sudo aptitude install git</p>
</blockquote>
<p>Pour les utilisateurs qui utilisent Debian ou Ubuntu depuis quelques temps, vous pouvez constater que le paquet s'appelle maintenant <em>git</em> et non <em>git-core</em> (pour le petite histoire, git était le paquet <em>GNU Interactive Tools</em>, renommé depuis <em>gnuit</em>). Mais le problème avec une installation du paquet officiel est que vous disposerez d'une version plus ou moins ancienne (la version disponible au moment du <em>freeze</em> de la distribution), Ubuntu ne mettant pas à jour git avec les dépots <em>backports</em>, <em>updates</em> ou <em>proposed</em>. Personnellement, j'aime disposer de la dernière version, les développeurs git améliorant régulièrement le <em>frontend</em>.</p>
<p>C'est la qu'interviennent les <strong>PPA</strong>, pour <em>Personal Package Archives</em>. C'est un dépôt <strong>non officiel</strong> qu'il est possible d'activer sur <em>Launchpad</em> quand vous créé un projet sur cette plateforme. C'est justement sur Launchpad que les mainteneurs officiels Ubuntu du paquet git travaillent ! Et comme ils sont gentils, il existent justement un <a href="https://launchpad.net/~git-core/+archive/ppa">PPA git</a>. Voici les commandes pour utiliser ce PPA sur Ubuntu :</p>
<blockquote>
<p>$ sudo add-apt-repository ppa:git-core/ppa</p>
</blockquote>
<p>Cette commande ajoute le PPA dans vos dépôts accessibles (sources.list). C'est équivalent à mettre manuellement un fichier de configuration dans le répertoire <em>/etc/apt/sources.list.d/</em> et d'ajouter la clé GPG (voir la section <em>Technical details about this PPA</em> pour plus de détails).</p>
<blockquote>
<p>$ sudo aptitude update</p>
</blockquote>
<p>Mise à jour des paquets disponibles.</p>
<blockquote>
<p>$ sudo aptitude install git</p>
</blockquote>
<p>Installation de git. Comme la version de git disponible sur le PPA est plus réçente que la version officielle, c'est donc cette première qui sera choisie. Et voila. Moins de 48 heures aprés une sortie officielle de git, vous l'avez sur votre machine ! Les mainteneurs étant trés réactifs.</p>
<p>Note : vous pouvez constater qu'ils maintiennent non seulement pour Maverick (10.10), mais aussi pour Lucid (10.04), Karmic (09.10), Jaunty (09.04), Hardy (08.04) et Dapper (06.06) ! Il existe même une version réçente pour Intrepid (07.04) même si cette dernière n'est plus offciellement maintenue (Hardy et Dapper étant des LTS, <em>Long Term Support</em>).</p>]]></content>
  </entry>
</feed>
