<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>GitFR (migration)</title><link>http://gitfr.net/blog</link><description></description><atom:link href="http://gitfr.net/categories/migration.xml" type="application/rss+xml" rel="self"></atom:link><language>fr</language><lastBuildDate>Sat, 22 Feb 2014 14:49:46 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Plone sur GitHub</title><link>http://gitfr.net/posts/0076-plone_sur_github.html</link><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://www.plone.net"&gt;Plone&lt;/a&gt;, le plus gros CMS Libre vient lui aussi de
&lt;a href="https://github.com/plone"&gt;passer sur GitHub&lt;/a&gt;. Vous pouvez donc constater la
présence de 127 (!) dépôts Git. Ce nombre important vient de la programmation
par composant du monde &lt;em&gt;Zope&lt;/em&gt; (une fonctionnalité = un composant Python = un
dépot Git).&lt;/p&gt;
&lt;p&gt;Pourquoi je parle de cette migration en particulier alors que de nombreux
projets Libres passent sur GitHub ? Tout simplement car c'est aussi un des
plus gros projets &lt;strong&gt;Python&lt;/strong&gt;, langage utilisé par les deux principaux
«concurrents» de Git, à savoir &lt;em&gt;Mercurial&lt;/em&gt; et &lt;em&gt;Bazaar&lt;/em&gt;. Ce choix fait suite
à  un sondage chez les développeurs pour déterminer la prochaine
plateforme d'hébergement (3 réponses possibles : oui, neutre, non) :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Héberger son prore serveur Git : 10, 36, 33&lt;/li&gt;
&lt;li&gt;Héberger son prore serveur Hg : 8, 18, 53&lt;/li&gt;
&lt;li&gt;Héberger son prore serveur Bzr : 1, 3, 75&lt;/li&gt;
&lt;li&gt;Sur GitHub : 46, 21, 12&lt;/li&gt;
&lt;li&gt;Sur Bitbucket : 8, 18, 53&lt;/li&gt;
&lt;li&gt;Sur Launchpad : 4, 6, 69&lt;/li&gt;
&lt;li&gt;Continuer avec son propre serveur SVN : 28, 30, 21&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ce résultat est révélateur sur plusieurs points :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un rejet absolu de Bzr. Personne n'en veut à part quatre personnes.&lt;/li&gt;
&lt;li&gt;Un rejet massif de Launchpad et dans une moindre mesure de Bitbucket (plutôt
  étonnant).&lt;/li&gt;
&lt;li&gt;Peu de gens sont pour héberger un serveur DVCS, ce qui me semble encore une
  fois assez étonnant. Il est facile par exemple d'administrer un serveur Hg.
  Plus un problème de méconnaissance ?&lt;/li&gt;
&lt;li&gt;Plus de la moitié des votants sont en faveur de GitHub, sans être un
  plébiscite.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La conclusion qui semble se dégager de cette enquête est que c'est encore une
fois GitHub qui fait pencher la balance vers Git, et non l'inverse. D'autant
plus que choisir Git signifie faire une croix sur la possibilité pour un
développeur Python de coder facilement des extensions Mercurial, atout non
négligeable quand on gère un projet.&lt;/p&gt;&lt;/div&gt;</description><category>github</category><category>migration</category><guid>http://gitfr.net/posts/0076-plone_sur_github.html</guid><pubDate>Sat, 01 Oct 2011 15:29:00 GMT</pubDate></item><item><title>RoR utilise le tracker de GitHub</title><link>http://gitfr.net/posts/0058-ror_utilise_le_tracker_de_github.html</link><description>&lt;div&gt;&lt;p&gt;Si la plupart des gens considèrent GitHub comme une superbe plateforme d'hébergement de code, beaucoup sont encore dubitatifs sur la délégation des tickets (bug et/ou fonctionnalité), et préfèrent utiliser &lt;a href="http://trac.edgewall.org/"&gt;Trac&lt;/a&gt;, &lt;a href="http://www.redmine.org/"&gt;Redmine&lt;/a&gt; ou &lt;a href="http://www.atlassian.com/software/jira/"&gt;JIRA&lt;/a&gt;. Il est donc intéressant d'apprendre que le projet &lt;a href="http://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; (qui pour l'anecdote, est hébergé depuis le premier jour de GitHub) utilise officiellement GitHub pour&lt;a href="https://github.com/rails/rails/issues"&gt; ses tickets de bugs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le retour d'expérience va donc être très intéressant. Et sans nul doute, les GitHubbers (les développeurs de GitHub) seront très sensibles et réactifs aux remarques et retours, étant eux mêmes des utilisateurs de RoR.&lt;/p&gt;&lt;/div&gt;</description><category>github</category><category>migration</category><guid>http://gitfr.net/posts/0058-ror_utilise_le_tracker_de_github.html</guid><pubDate>Thu, 28 Apr 2011 15:50:00 GMT</pubDate></item><item><title>Haskell sur GitHub</title><link>http://gitfr.net/posts/0037-haskell_sur_github.html</link><description>&lt;div&gt;&lt;p&gt;On le savait déjà (la décision date d’aout 2008 !) mais voila une très mauvaise nouvelle pour l'outil de gestion de source &lt;a href="http://darcs.net/"&gt;Darcs&lt;/a&gt;. Le principal projet qui l'utilise, à savoir le compilateur &lt;a href="http://www.haskell.org/ghc/"&gt;Haskell GHC&lt;/a&gt;, passe officiellement sur Git, avec un &lt;a href="https://github.com/ghc/ghc"&gt;miroir disponible sur GitHub&lt;/a&gt; depuis le 31 mars.&lt;/p&gt;
&lt;p&gt;Mauvaise nouvelle aussi (et surtout) car Darcs est lui même en Haskell, le projet GHC était donc le premier pourvoyeur (si je ne me trompe pas) de contributions. Mais le point intéressant est l'argument pour passer à Git :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It came down to two things: the degree of support available, and 
flexibility of the tools (git is much happier to let you modify the history 
than Mercurial).  Speed ruled out bzr, and Windows support is less of an 
issue: git appears to work reasonably well on Windows these days.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Les développeurs GHC, comme la fondation Eclipse, estiment donc que le support Windows est devenu «raisonnable» pour ne pas gêner les utilisateurs de cette plateforme. Ils estiment aussi que la vitesse est le point faible de Bazaar (bzr). Et enfin, que la capacité de retravailler son historique (point fort que je mets en avant dans toutes mes présentations Git) est un atout important. Point important, cette phrase vient du mail expliquant la migration en 2008 (Bazaar étant maintenant plus rapide, par contre Git est toujours mieux armé pour gérer l'historique).&lt;/p&gt;
&lt;p&gt;Est ce la fin pour Darcs ? Un projet Libre ne meurt vraiment jamais tant qu'il existe des utilisateurs. Le développement se poursuit (la 2.5.2 est sortie et la 2.8 est en cours de développement avec le support très attendu de la fonction &lt;em&gt;rebase&lt;/em&gt;). Il est dommage pour la diversité de l'écosystème Libre qu'un outil meurt mais Darcs ne semble plus avoir d'atout majeur face à Git.&lt;/p&gt;
&lt;p&gt;Pour la petite histoire, Darcs est né en 2002 d'un &lt;strong&gt;fork&lt;/strong&gt; du projet GNU Arch (1er DVCS libre en 2001). L'aspect intéressant de Darcs est qu'il présente non pas l'historique comme une série de «snapshots», mais comme une suite de &lt;strong&gt;patchs&lt;/strong&gt;, qui n'ont pas nécessairement de lien entre eux. Ce qui facilite grandement le &lt;strong&gt;cherry-picking&lt;/strong&gt;. Malheureusement, des performances catastrophiques et quelques bugs génants au moment du &lt;em&gt;merge&lt;/em&gt; n'ont jamais permis à Darcs de décoller.&lt;/p&gt;&lt;/div&gt;</description><category>github</category><category>migration</category><guid>http://gitfr.net/posts/0037-haskell_sur_github.html</guid><pubDate>Sun, 03 Apr 2011 14:34:00 GMT</pubDate></item><item><title>Eclipse sur GitHub</title><link>http://gitfr.net/posts/0036-eclipse_sur_github.html</link><description>&lt;div&gt;&lt;p&gt;La fondation &lt;strong&gt;Eclipse&lt;/strong&gt; propose maintenant des &lt;a href="https://github.com/eclipse/"&gt;miroirs GitHub&lt;/a&gt;. 70 projets sont d'ores et déjà disponibles, et le mouvement semble enclenché pour que Git devienne l'outil de gestion de source par défaut.&lt;/p&gt;
&lt;p&gt;La fondation héberge ses propres projets en proposant &lt;a href="http://dev.eclipse.org/viewcvs/viewvc.cgi/"&gt;CVS, Subversion&lt;/a&gt; et &lt;a href="http://git.eclipse.org/c/"&gt;Git&lt;/a&gt;. Mais la perspective collaborative de GitHub semble être un avantage certain, comme le souligne l'&lt;a href="http://aniszczyk.org/2011/04/01/eclipse-org-and-github/"&gt;annonce&lt;/a&gt; de Chris Aniszczyk :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm happy to announce we finally setup mirroring of eclipse.org repositories on GitHub.
I think this is an important step to making the eclipse.org codebase more accessible for people
to fork and contribute changes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Et il faut bien évidemment que son projet soit sur Git pour que ce dernier apparaisse sur GitHub...&lt;/p&gt;
&lt;p&gt;De plus, InfoQ souligne que c'est l'amélioration d'&lt;a href="http://www.eclipse.org/egit/"&gt;Egit&lt;/a&gt;, le module Git pour Eclipse (la version 1.0 devant sortir pour Eclipse 3.7) qui rend Git attrayant aux yeux des développeurs. Ce qui est confirmé par l'augmentation très sensible depuis plusieurs mois des demandes de migration vers l'hébergement Git que propose la fondation.&lt;/p&gt;
&lt;p&gt;C'est donc une énorme communauté qui pointe le bout de son nez dans l'écosystème Git (Eclipse héberge des centaines de projets), signe supplémentaire de la maturité de ce dernier, notamment dans des environnements non Unix. Et on ne va pas s'en plaindre :).&lt;/p&gt;&lt;/div&gt;</description><category>github</category><category>migration</category><guid>http://gitfr.net/posts/0036-eclipse_sur_github.html</guid><pubDate>Sun, 03 Apr 2011 00:46:00 GMT</pubDate></item><item><title>Migration CVS vers Git pour le projet Drupal</title><link>http://gitfr.net/posts/0014-migration_cvs_vers_git_pour_le_projet_drupal.html</link><description>&lt;div&gt;&lt;p&gt;Le projet &lt;a href="http://www.drupal.org"&gt;Drupal&lt;/a&gt; est en cours de migration depuis plusieurs mois (le choix de migrer sur Git est décidé depuis février 2010). C'est donc toute une communauté qui faut former à l'outil, mettre en place des nouvelles pratiques, recoder l'infrastructure (intégration continue, deploiement...). Travail important s'il en est.&lt;/p&gt;
&lt;p&gt;Aprés une &lt;a href="http://groups.drupal.org/node/48818"&gt;évaluation des différents outils et du choix final&lt;/a&gt;, &lt;a href="http://drupal.org/community-initiatives/git"&gt;trois étapes&lt;/a&gt; et dix sprints de deux semaines sont planifiés. La migration s'étale donc sur environ 15 mois.&lt;/p&gt;
&lt;p&gt;Les 3 phases :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;création d'un mirroir Git en lecture seul (recréé régulièrement)&lt;/li&gt;
&lt;li&gt;utilisation de Git en mode centralisé&lt;/li&gt;
&lt;li&gt;utilisation de Git en mode décentralisé&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On peut noter que l'équipe infrastructure de Drupal était pour &lt;em&gt;Bzr&lt;/em&gt;, mais que la communauté Drupal était majoritairement pour Git. Le choix &lt;em&gt;Hg&lt;/em&gt; fut éliminé par manque de soutient.&lt;/p&gt;
&lt;p&gt;Voici la feuille de route :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sprint 1 - Making key decisions necessary for the project to move forward&lt;/li&gt;
&lt;li&gt;Sprint 2 - Version Control API&lt;/li&gt;
&lt;li&gt;Sprint 3 - VC API / Admin Interface and Migration Script Finalization&lt;/li&gt;
&lt;li&gt;Sprint 4 - Release-Worthy Views for VC API and Git Activity Log &lt;/li&gt;
&lt;li&gt;Sprint 5 - VC API / Project Module Integration&lt;/li&gt;
&lt;li&gt;Sprint 6 - Project Module (Release Nodes being automatically generated for repositories containing appropriately named branches)&lt;/li&gt;
&lt;li&gt;Sprint 7 - Preparation for Broader Community testing&lt;/li&gt;
&lt;li&gt;Sprint 8 - Community Testing&lt;/li&gt;
&lt;li&gt;Sprint 9 - Community Testing and Deployment Preparation&lt;/li&gt;
&lt;li&gt;Sprint 10 - Deployment (CVS will be gone forever)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vous trouverez les résumés des &lt;a href="http://groups.drupal.org/node/100999"&gt;sprint 1&lt;/a&gt;, &lt;a href="http://groups.drupal.org/node/101004"&gt;sprint 2&lt;/a&gt; et &lt;a href="http://groups.drupal.org/node/102104"&gt;sprint 3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le &lt;a href="http://git.drupalcode.org/"&gt;mirroir Git&lt;/a&gt; est déja en place puisque nous sommes à la phase 2, vous pouvez constater le nombre assez impressionant de dépôts. Les scripts de migration CVS vers SVN sont sur &lt;a href="https://github.com/sdboyer/drupalorg-git"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On a vu fleurir les présentations et les formations Git, comme au &lt;a href="http://groups.drupal.org/node/71473"&gt;Bootcamp Git De Los Angeles&lt;/a&gt; ou au &lt;a href="https://docs.google.com/present/view?id=0ATSj3ekASkFxZGRzZDVzdzdfNTA2Z2g1Mm1qZng&amp;amp;hl=en"&gt;DrupalCon de Copenhague&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si vous souhaitez suivre la migration, lisez régulièrement cette &lt;a href="http://groups.drupal.org/drupal-org-git-migration-team"&gt;page&lt;/a&gt; ou par &lt;em&gt;Twitter&lt;/em&gt; avec &lt;strong&gt;@DrupalGitGremln&lt;/strong&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>migration</category><guid>http://gitfr.net/posts/0014-migration_cvs_vers_git_pour_le_projet_drupal.html</guid><pubDate>Wed, 17 Nov 2010 08:39:00 GMT</pubDate></item><item><title>Support de Git dans les projets Apache</title><link>http://gitfr.net/posts/0013-support_de_git_dans_les_projets_apache.html</link><description>&lt;div&gt;&lt;p&gt;L'équipe qui gère l'infrastructure de la fondation &lt;strong&gt;Apache&lt;/strong&gt; travaille sur le support de Git. Comme beaucoup de projets Libres qui utilisent &lt;strong&gt;SVN&lt;/strong&gt;, de nombreux contributeurs utilisent Git par l'intermédiaire de &lt;strong&gt;git-svn&lt;/strong&gt;, mais ce changement va permettre l'utilisation de Git nativement.&lt;/p&gt;
&lt;p&gt;Les discussions sont &lt;a href="http://markmail.org/message/7ztq2pwm6456zqmy"&gt;en cours&lt;/a&gt; sur la liste de diffusion et des tickets Jira sont &lt;a href="https://issues.apache.org/jira/browse/INFRA/component/12312655"&gt;ouverts&lt;/a&gt; à ce sujet.&lt;/p&gt;
&lt;p&gt;Il va être intéressant de suivre les discussions et la mise en place d'un &lt;em&gt;DVCS&lt;/em&gt; sur une aussi grosse infrastructure que celle d'Apache, qui gère beaucoup de projets avec des années d'historique et d'habitude d'un modèle centralisé. Notamment de voir quels worflows ils vont mettre en place.&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>migration</category><guid>http://gitfr.net/posts/0013-support_de_git_dans_les_projets_apache.html</guid><pubDate>Wed, 17 Nov 2010 05:10:00 GMT</pubDate></item></channel></rss>